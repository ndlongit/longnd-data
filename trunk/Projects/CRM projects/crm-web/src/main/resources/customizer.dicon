<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE components PUBLIC "-//SEASAR//DTD S2Container 2.4//EN" 
    "http://www.seasar.org/dtd/components24.dtd">
<components>
    <include path="default-customizer.dicon"/>

    <component name="actionCustomizer" class="org.seasar.framework.container.customizer.CustomizerChain">
        <!--
        handleThrowableInterceptorでは業務エラー発生時に業務エラー画面へ遷移させるため
        BusinessErrorExceptionをcatchして握りつぶしています。
        handleThrowableInterceptorは必ずTxAttributeCustomizerより上に記述してください。
        handleThrowableInterceptorがTxAttributeCustomizerより上に記述されている場合は、
        TxAttributeCustomizerが先に実行されますので、例外発生時はロールバックされます。
        handleThrowableInterceptorがTxAttributeCustomizerより下に記述されている場合は
        handleThrowableInterceptorが先に実行されますので
        BusinessErrorException発生時はロールバックされません。
        (他の例外はロールバックされます)
        -->
        <!-- 例外ハンドリング -->
        <initMethod name="addAspectCustomizer">
            <arg>"handleThrowableInterceptor"</arg>
        </initMethod>
        <!-- アクションメソッドの実行前後処理を行うインターセプター -->
        <initMethod name="addAspectCustomizer">
            <arg>"actionMethodInterceptor"</arg>
        </initMethod>
        <!-- Action実行前処理 -->
        <initMethod name="addAspectCustomizer">
            <arg>"actionMessagesThrowsInterceptor"</arg>
        </initMethod>
        <!-- アクションメソッド実行開始・終了ログ -->
        <initMethod name="addAspectCustomizer">
            <arg>"TraceAdvice"</arg>
        </initMethod>
        <initMethod name="addAspectCustomizer">
            <arg>"loggingInterceptor"</arg>
        </initMethod>
        <initMethod name="addAspectCustomizer">
            <arg>"webAuthInterceptor"</arg>
        </initMethod>
        <initMethod name="addCustomizer">
            <arg>traceCustomizer</arg>
        </initMethod>
        <!-- 追加のカスタマイザ(struts用の変換など) -->
        <initMethod name="addCustomizer">
            <arg><component class="org.seasar.struts.customizer.ActionCustomizer"/></arg>
        </initMethod>
    </component>

    <!--
    アクションフォームにAOPを仕掛けると、S2AOPが元のクラスをエンハンスしたクラスを実行時に作り出す関係で、
    セッションスコープへのシリアライズ・デシリアライズ処理の際に例外が発生することがあります。
    これは、クラスローダーに登録されているS2コンテナ管理下のクラスがホットデプロイの仕組みによって、
    クラスローダーにリロードされる際に名前が変わってしまうことに起因しています。
    この現象は以下の条件がすべて重なった場合に発生しうるものです。
        ・アクションフォームにAOPを設定している。
        ・アクションフォームがセッションスコープである。
        ・デプロイモード（Env）が「Product」（完全なクールデプロイ）ではない。
    アクションフォームにAOPを設定する場合は、この制限を踏まえたうえでよく注意してご利用ください。
    -->
    <component name="formCustomizer" class="org.seasar.framework.container.customizer.CustomizerChain" />

    <component name="serviceCustomizer" class="org.seasar.framework.container.customizer.CustomizerChain">
        <initMethod name="addCustomizer">
            <arg>traceCustomizer</arg>
        </initMethod>
        <initMethod name="addCustomizer">
            <arg><component class="org.seasar.framework.container.customizer.TxAttributeCustomizer"/></arg>
        </initMethod>
    </component>
    <component name="mailCustomizer" class="org.seasar.framework.container.customizer.CustomizerChain">
        <initMethod name="addAspectCustomizer">
            <arg>"aop.traceInterceptor"</arg>
        </initMethod>
        <initMethod name="addAspectCustomizer">
            <arg>"xenlonMailInterceptor"</arg>
        </initMethod>
    </component>
</components>
