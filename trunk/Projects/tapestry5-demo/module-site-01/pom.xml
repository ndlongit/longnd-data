<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.tapestry</groupId>
	<artifactId>module-site-01</artifactId>
	<version>${app-version}</version>
	<packaging>war</packaging>
	<name>tapestry5-demo Tapestry 5 Application</name>
	<parent>
		<artifactId>tapestry5-demo</artifactId>
		<groupId>org.java.demo</groupId>
		<version>${app-version}</version>
		<relativePath>../../tapestry5-demo</relativePath>
	</parent>
	<dependencies> 
		<dependency>
			<groupId>org.java.demo</groupId>
			<artifactId>module-tapestry</artifactId>
			<version>${app-version}</version>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>site-01</finalName>
		<plugins>
			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.9</version>
				<configuration>
					<!-- Log to the console. -->
					<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
						<!--
							This doesn't do anything for Jetty, but is a workaround for a
							Maven bug that prevents the requestLog from being set.
						-->
						<append>true</append>
					</requestLog>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<reporting>

		<!--
			Adds a report detailing the components, mixins and base classes
			defined by this module.
		-->
		<plugins>
			<plugin>
				<groupId>org.apache.tapestry</groupId>
				<artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version>
				<configuration>
					<rootPackage>org.tapestry5.demo</rootPackage>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<repositories>

		<!--
			This repository is only needed if the Tapestry released artifacts
			haven't made it to the central Maven repository yet.
		-->
		<repository>
			<id>tapestry</id>
			<url>http://tapestry.formos.com/maven-repository/</url>
		</repository>

		<!--
			This repository is only needed when the tapestry-release-version is a
			snapshot release.
		-->
		<repository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</repository>

		<repository>
			<id>codehaus.snapshots</id>
			<url>http://snapshots.repository.codehaus.org</url>
		</repository>
		<repository>
			<id>OpenQA_Release</id>
			<name>OpenQA Release Repository</name>
			<url>http://archiva.openqa.org/repository/releases/</url>
		</repository>
	</repositories>

	<pluginRepositories>

		<!--
			As above, this can be commented out when access to the snapshot
			version of a Tapestry Maven plugin is not required.
		-->
		<pluginRepository>
			<id>tapestry-snapshots</id>
			<url>http://tapestry.formos.com/maven-snapshot-repository/</url>
		</pluginRepository>

	</pluginRepositories>
</project>
